%!PS-Adobe-3.0 EPSF-3.0
%%Title: EAGLE Drawing /media/Data (D)/eagle/meag128board/128.brd
%%Creator: EAGLE
%%Pages: 1
%%BoundingBox: 0 0 576 810
%%EndComments

% Coordinate transfer:

/EU { 254 div 0.072 mul } def
/inch { 72 mul } def

% Linestyle:

1 setlinecap
1 setlinejoin

% Drawing functions:

/l {  % draw a line
   /lw exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   newpath
   x1 EU y1 EU moveto
   x2 EU y2 EU lineto
   lw EU setlinewidth
   stroke
   } def

/h {  % draw a hole
   /d  exch def
   /y  exch def
   /x  exch def
   d 0 gt {
     newpath
     x EU y EU d 2 div EU 0 360 arc
     currentgray dup
     1 exch sub setgray
     fill
     setgray
     } if
   } def

/b {  % draw a bar
   /an exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   /w2 x2 x1 sub 2 div EU def
   /h2 y2 y1 sub 2 div EU def
   gsave
   x1 x2 add 2 div EU y1 y2 add 2 div EU translate
   an rotate
   newpath
   w2     h2     moveto
   w2 neg h2     lineto
   w2 neg h2 neg lineto
   w2     h2 neg lineto
   closepath
   fill
   grestore
   } def

/c {  % draw a circle
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   newpath
   lw EU setlinewidth
   x EU y EU rd EU 0 360 arc
   stroke
   } def

/a {  % draw an arc
   /lc exch def
   /ae exch def
   /as exch def
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   lw rd 2 mul gt {
     /rd rd lw 2 div add 2 div def
     /lw rd 2 mul def
     } if
   currentlinecap currentlinejoin
   lc setlinecap 0 setlinejoin
   newpath
   lw EU setlinewidth
   x EU y EU rd EU as ae arc
   stroke
   setlinejoin setlinecap
   } def

/p {  % draw a pie
   /d exch def
   /y exch def
   /x exch def
   newpath
   x EU y EU d 2 div EU 0 360 arc
   fill
   } def

/edge { 0.20710678119 mul } def

/o {  % draw an octagon
   /an exch def
   /dy exch def
   /dx exch def
   /y  exch def
   /x  exch def
   gsave
   x EU y EU translate
   an dx dy lt { 90 add /dx dy /dy dx def def } if rotate
   newpath
      0 dx 2 div sub EU                    0 dy edge  add EU moveto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div add EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div add EU lineto
      0 dx 2 div add EU                    0 dy edge  add EU lineto
      0 dx 2 div add EU                    0 dy edge  sub EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div sub EU lineto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div sub EU lineto
      0 dx 2 div sub EU                    0 dy edge  sub EU lineto
   closepath
   fill
   grestore
   } def

% the real drawing size:

/MinDrawX      0 EU def
/MinDrawY      0 EU def
/MaxDrawX 970080 EU def
/MaxDrawY 916180 EU def

% the usable page size:

/LeftMargin 0.25 inch def  % change these if drawing gets clipped!
/BotMargin  0.25 inch def
/PageWidth   7.7500 inch def
/PageHeight 11.0000 inch def

% are we going to rotate?:

/RotateDrawing 0 0 ne def

% Media size functions:

/AbortMessage {  % Show a message in a box and stop printing
   /h 100 def
   /Courier findfont 12 scalefont setfont
   mediawidth pagemargin sub h 1 setpage
   newpath
   0 0 moveto
   0 h rlineto
   mediawidth pagemargin sub 0 rlineto
   0 h neg rlineto
   closepath
   5 setlinewidth
   stroke
   newpath 50 60 moveto (ERROR: Jobsize exceeds physical printing area!) show
   newpath 50 40 moveto (       Job has been aborted!) show
   showpage
   stop
   } def

/SelectPage {  % Select the page identified by Row and Column
   /Column exch def
   /Row    exch def

   % the actually exposed area (if the machine knows these parameters!):

   /DrawX MaxDrawX MinDrawX sub def
   /DrawY MaxDrawY MinDrawY sub def
   statusdict /setpage known
   statusdict /mediawidth known and
   statusdict /medialength known and
   statusdict /pagemargin known and {
      % this is for machines that can tell the media size:
      statusdict begin
         /MediaW mediawidth pagemargin sub def
         DrawX DrawY ge {
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            } ifelse
         end
      }{
      % this is for machines that can NOT tell the media size:
      % (Ghostscript doesn't like this!)
      /Product product length string def
      /i 0 def
      product { dup 97 lt { 32 add } if Product exch i exch put /i i 1 add def } forall 
      Product (ghostscript) search dup /IsGhostscript exch def
      { pop pop } if
      pop
      IsGhostscript not {
         statusdict /setpage known {
            statusdict begin
               RotateDrawing {
                  LeftMargin PageHeight add BotMargin DrawY add
                  }{
                  BotMargin DrawY add LeftMargin DrawX add 
                  } ifelse
               0 setpage
               end
            } if
         } if
      % set clipping boundary:
      newpath
      LeftMargin BotMargin moveto
      0 PageHeight rlineto
      PageWidth  0 rlineto
      0 PageHeight neg rlineto
      closepath
      clip
      % set the origin:
      LeftMargin BotMargin translate
      RotateDrawing {
         0 PageHeight translate
         -90 rotate
         PageHeight Column mul neg PageWidth Row mul neg translate
         }{
         PageWidth Column mul neg PageHeight Row mul neg translate
         } ifelse
      } ifelse
   % move the lower left corner of the drawing to the origin:
   MinDrawX neg MinDrawY neg translate
   
   % Linestyle:
   
   1 setlinecap
   1 setlinejoin
   
   % invert drawing:
   newpath
   MinDrawX MinDrawY moveto
   MaxDrawX MinDrawY lineto
   MaxDrawX MaxDrawY lineto
   MinDrawX MaxDrawY lineto
   0 setgray
   closepath fill
   1 setgray
   
   } def

% TheDrawing

gsave 0 0 SelectPage
668201 658368 673789 670306 180.0 b
660327 658368 665915 670306 180.0 b
652453 658368 658041 670306 180.0 b
644579 658368 650167 670306 180.0 b
636705 658368 642293 670306 180.0 b
628831 658368 634419 670306 180.0 b
620957 658368 626545 670306 180.0 b
613083 658368 618671 670306 180.0 b
605209 658368 610797 670306 180.0 b
597335 658368 602923 670306 180.0 b
589461 658368 595049 670306 180.0 b
581587 658368 587175 670306 180.0 b
573713 658368 579301 670306 180.0 b
565839 658368 571427 670306 180.0 b
557965 658368 563553 670306 180.0 b
550091 658368 555679 670306 180.0 b
683568 587883 695506 593471 180.0 b
683568 595757 695506 601345 180.0 b
683568 603631 695506 609219 180.0 b
683568 611505 695506 617093 180.0 b
683568 619379 695506 624967 180.0 b
683568 627253 695506 632841 180.0 b
683568 635127 695506 640715 180.0 b
683568 643001 695506 648589 180.0 b
683568 580009 695506 585597 180.0 b
683568 572135 695506 577723 180.0 b
683568 564261 695506 569849 180.0 b
683568 556387 695506 561975 180.0 b
683568 548513 695506 554101 180.0 b
683568 540639 695506 546227 180.0 b
683568 532765 695506 538353 180.0 b
683568 524891 695506 530479 180.0 b
668201 503174 673789 515112 180.0 b
660327 503174 665915 515112 180.0 b
652453 503174 658041 515112 180.0 b
644579 503174 650167 515112 180.0 b
636705 503174 642293 515112 180.0 b
628831 503174 634419 515112 180.0 b
620957 503174 626545 515112 180.0 b
613083 503174 618671 515112 180.0 b
605209 503174 610797 515112 180.0 b
597335 503174 602923 515112 180.0 b
589461 503174 595049 515112 180.0 b
581587 503174 587175 515112 180.0 b
573713 503174 579301 515112 180.0 b
565839 503174 571427 515112 180.0 b
557965 503174 563553 515112 180.0 b
550091 503174 555679 515112 180.0 b
528374 524891 540312 530479 180.0 b
528374 532765 540312 538353 180.0 b
528374 540639 540312 546227 180.0 b
528374 548513 540312 554101 180.0 b
528374 556387 540312 561975 180.0 b
528374 564261 540312 569849 180.0 b
528374 572135 540312 577723 180.0 b
528374 580009 540312 585597 180.0 b
528374 587883 540312 593471 180.0 b
528374 595757 540312 601345 180.0 b
528374 603631 540312 609219 180.0 b
528374 611505 540312 617093 180.0 b
528374 619379 540312 624967 180.0 b
528374 627253 540312 632841 180.0 b
528374 635127 540312 640715 180.0 b
528374 643001 540312 648589 180.0 b
showpage grestore
